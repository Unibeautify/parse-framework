{"begin":[-1,0,-1,2,-1,4,-1,6,-1,8,-1,10,10,10,13,10,15,15,17,15,10,20,10,-1,23,24,25,26,26,26,29,29,26,32,32,34,32,26,37,26,25,40,40,40,40,44,45,45,45,48,49,49,49,52,52,48,45,44,40,25,24,23,61,61,63,61,65,65,61,23,69,69,69,72,72,72,72,76,77,78,78,78,77,76,72,84,84,72,87,87,87,87,91,91,93,93,93,93,93,91,87,100,100,87,103,103,103,106,106,106,106,106,103,87,87,87,87,87,72,118,118,72,121,121,123,123,123,123,123,121,72,130,130,130,72,134,134,72,72,72,72,72,69,69,69,69,69,146,146,148,148,148,148,148,146,69,155,155,157,157,157,157,157,155,69,164,164,69,167,167,167,167,167,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,342,342,69,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,69,69,362,362,364,364,364,364,364,364,364,364,364,364,364,362,69,69,378,379,380,380,380,379,379,379,379,387,387,387,387,379,378,69,394,394,394,394,394,394,394,394,69,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,69,69,69,69,69,23],"lexer":["markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","script","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup","markup"],"lines":[0,0,4,0,2,0,2,0,2,0,4,0,0,2,0,3,0,2,0,2,3,0,4,4,2,2,2,0,0,2,0,0,2,0,2,0,2,2,0,2,4,0,0,0,2,2,0,0,2,2,0,2,2,2,2,2,2,2,2,2,2,2,0,2,0,2,0,0,2,2,0,0,2,0,2,0,2,2,0,0,0,0,0,2,2,2,2,2,2,2,0,2,0,2,0,0,2,0,2,2,2,0,0,2,0,0,0,0,2,2,2,2,2,2,0,0,0,0,2,2,2,2,0,2,0,0,2,0,2,2,2,0,0,2,2,2,2,2,2,0,2,2,2,0,2,0,2,0,2,0,0,2,0,2,2,2,0,2,0,0,2,0,2,2,2,0,2,2,2,1,0,0,0,1,3,1,1,1,0,0,0,0,3,1,1,1,0,2,1,0,0,0,0,0,0,2,1,1,1,0,2,1,1,1,0,3,1,1,1,0,0,0,1,0,1,0,2,0,0,1,1,0,0,0,0,2,1,1,1,0,0,0,0,0,1,0,1,0,2,0,0,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,1,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,0,0,0,1,0,1,0,0,3,1,1,0,2,0,2,0,0,0,1,0,0,2,0,2,2,1,0,2,0,2,0,0,0,1,0,0,2,0,0,0,2,0,2,2,2,2,0,2,0,0,2,2,1,0,0,0,1,0,0,3,2,2,2,0,2,0,2,0,0,2,0,0,2,0,0,0,3,0,0,4,2,0,2,0,2,4,4,0,3,0,0,0,0,2,0,0,0,3,0,3,3,3,3,2,2,0,2,3,2,2,0,2,2,2,0,2,2,2,3,0,2,0,2,2,0,2,2,3,0,0,0,0,2,0,0,0,2,0,0,2,2,0,3,0,2,2,0,2,0,2,2],"presv":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false],"stack":["global","cfset","global","cfset","global","cfset","global","cfset","global","cfset","global","cfloop","cfloop","cfloop","cfset","cfloop","cfif","cfif","cfset","cfif","cfloop","cfset","cfloop","global","cfoutput","table","tr","cfloop","cfloop","cfloop","th","th","cfloop","cfif","cfif","cfset","cfif","cfloop","cfset","cfloop","tr","cfloop","cfloop","cfloop","cfloop","tr","cfloop","cfloop","cfloop","td","cfif","cfif","cfif","else","else","td","cfloop","tr","cfloop","tr","table","cfoutput","cfif","cfif","cfset","cfif","cfif","cfif","cfif","cfoutput","cfmodule","cfmodule","cfmodule","cfif","cfif","cfif","cfif","div","cfoutput","a","a","a","cfoutput","div","cfif","p","p","cfif","p","p","p","p","cfif","cfif","cfloop","cfloop","cfloop","cfloop","cfloop","cfif","p","cfmodule","cfmodule","p","cfmodule","cfmodule","cfmodule","cfif","cfif","cfif","cfif","cfif","cfmodule","p","p","p","p","p","cfif","p","p","cfif","cfif","cfif","cfloop","cfloop","cfloop","cfloop","cfloop","cfif","cfif","p","p","p","cfif","p","p","cfif","cfif","cfif","cfif","cfif","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfif","cfif","cfloop","cfloop","cfloop","cfloop","cfloop","cfif","cfmodule","cfif","cfif","cfloop","cfloop","cfloop","cfloop","cfloop","cfif","cfmodule","cfif","cfif","cfmodule","cfscript","cfscript","cfscript","cfscript","cfscript","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","div","div","cfmodule","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cfmodule","cfmodule","cfcomponent","cfcomponent","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cfcomponent","cfmodule","cfmodule","cftransaction","cftry","cfloop","cfloop","cfloop","cftry","cftry","cftry","cftry","cfcatch","cfcatch","cfcatch","cfcatch","cftry","cftransaction","cfmodule","cfif","cfif","cfif","cfif","cfif","cfif","cfif","cfif","cfmodule","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cffunction","cfmodule","cfmodule","cfmodule","cfmodule","cfmodule","cfoutput"],"token":["<cfset/>","tags=GetTagList()","<cfset/>","bodies=structNew()","<cfset/>","namespace=\"cf\"","<cfset/>","tags=tags[namespace]","<cfset>","maxLength=0","<cfloop>","list=\"#StructKeyList(tags)#\"","index=\"tagname\"","<cfset/>","tag=getTagData(namespace, tagname)","<cfif>","not structkeyExists(bodies, tag.bodyType)","<cfset/>","bodies[tag.bodyType]=ArrayNew(1)","</cfif>","<cfset>","ArrayAppend(bodies[tag.bodyType], tagname)","</cfloop>","<cfoutput>","<table>","<tr>","<cfloop>","list=\"#structKeyList(bodies)#\"","index=\"key\"","<th>","#key# end tag","</th>","<cfif>","ArrayLen(bodies[key]) GT maxLength","<cfset>","maxLength=ArrayLen(bodies[key])","</cfif>","<cfset>","ArraySort(bodies[key], \"text\", \"asc\")","</cfloop>","<cfloop>","from=\"1\"","to=\"#maxLength#\"","index=\"i\"","<tr>","<cfloop>","list=\"#structKeyList(bodies)#\"","index=\"key\"","<td>","<cfif>","ArrayLen(bodies[key]) GTE i","#bodies[key][i]#","<cfelse>","&nbsp;","</cfif>","</td>","</cfloop>","</tr>","</cfloop>","</tr>","</table>","<cfif>","x EQ 1 OR y EQ 2","<cfset/>","z=3","<CFIF>","ListLen(Attributes.Site_Type_ID) OR ListLen(Attributes.Class_Type_ID) OR Attributes.Grantee_ID OR Attributes.Resa_ID OR Attributes.Class_Site_ID OR Attributes.Class_ID OR Attributes.NotComplete","</CFIF>","</cfif>","<CFMODULE>","Template=\"../../common/capture_content.cfm\"","ReturnVariable=\"displayContent\"","<CFIF>","Len(FileName)","<CFSET>","Caption=\"Mailing Labels Created\"","<div>","<CFOUTPUT>","<a>","href=\"profdev/display/#fileName#\"","Download Mailing Labels","</a>","</CFOUTPUT>","</div>","<p>","To save this file right click on the link above and choose \"Save Target As...\"","</p>","<p>","If you would like a coversheet for these labels that describes how they were filtered then","<CFSET>","formParams=\"mailtype=#Attributes.MailType#\"","<cfif>","isdefined(\"form.fieldnames\")","<cfloop>","list=\"#form.fieldnames#\"","index=\"field\"","<cfset>","formParams=ListAppend(formParams, \"#field#=\" & evaluate(\"form.\"&\"#field#\"),\"&\")","</cfloop>","</cfif>","<cfmodule>","asdf","</cfmodule>","<CFMODULE>","Template=\"../../common/my_module.cfm\"","ReturnVariable=\"someVariable\"","<CFIF>","Len(FileName)","do some stuff since it is true","<CFELSE>","do some other stuff since it is false","</CFIF>","</CFMODULE>","<CF_AEMIS_PRINT>","Caption=\"Load the Coversheet\"","pURL=\"index.cfm?Section=#request.site.Section#&Page=#request.site.Page#&Step=CoverSheet&#formParams#\"","Image=\"\"","</p>","<p>","To use these labels, open the file in Microsoft Word and print them.","</p>","<cfif>","isdefined(\"form.fieldnames\")","<cfloop>","list=\"#form.fieldnames#\"","index=\"field\"","<cfset>","formParams=ListAppend(formParams, \"#field#=\" & evaluate(\"form.\"&\"#field#\"),\"&\")","</cfloop>","</cfif>","<p>","class=\"warning\"","It is always a good idea to print one test page\non plain paper and overlay it on your labels before printing the entire list to make sure everything is configured on your printer\ncorrectly.","</p>","<p>","Mailing Labels are formatted for standard Avery 5160 mailing label stock.","</p>","<CFELSE>","<CFSET>","Caption=\"Mailing Label Creation Error\"","There were no people found that match your filter criteria. Please go back to the filter and try again.","</CFIF>","<cfset>","links=\"<p><a href=\"\"index.cfm?Section=#request.site.Section#&Page=#request.site.Page#&Step=#LastStep#&#formParams#&TimeStamp=#request.site.TimeStamp#\"\">Generate</a> another set of #captionText# mailing labels</p>\"","<cfset>","formParams=ListAppend(formParams, \"#field#=\" & evaluate(\"form.\"&\"#field#\"),\"&\")","<cfif>","isdefined(\"form.fieldnames\")","<cfloop>","list=\"#form.fieldnames#\"","index=\"field\"","<cfset>","formParams=ListAppend(formParams, \"#field#=\" & evaluate(\"form.\"&\"#field#\"),\"&\")","</cfloop>","</cfif>","<cfif>","isdefined(\"form.fieldnames\")","<cfloop>","list=\"#form.fieldnames#\"","index=\"field\"","<cfset>","formParams=ListAppend(formParams, \"#field#=\" & evaluate(\"form.\"&\"#field#\"),\"&\")","</cfloop>","</cfif>","<CFIF>","(Attributes.X OR (Attributes.Value123 EQ SOME_VALUE)) AND NOT Attributes.Z","</CFIF>","<cfscript>","function","crc16","(","str",")","{","var","Crc16Tab","=","listToArray","(","'0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920'",")",";","var","n","=","1",";","var","length","=","len","(","str",")",";","var","crc","=","0",";","var","ch","=","\"\"",";","if","(","not","structKeyExists","(","request",",","\"eswsoftware\"",")",")","x{","request",".","eswsoftware","=","structNew","(",")",";","x}","if","(","not","structKeyExists","(","request",".","eswsoftware",",","\"crc16\"",")",")","x{","request",".","eswsoftware",".","crc16","=","structNew","(",")",";","x}","request",".","eswsoftware",".","crc16",".","version","=","1",";","for","(",";","n","lte","length",";","n","=","n","+","1",")","{","ch","=","mid","(","str",",","n",",","1",")",";","crc","=","bitAnd","(","bitXor","(","bitShlN","(","crc",",","8",")",",","Crc16Tab","[","1","+","bitAnd","(","bitXor","(","bitShrN","(","crc",",","8",")",",","asc","(","ch",")",")",",","255",")","]",")",",","65535",")",";","}","return","formatBaseN","(","crc",",","16",")",";","}","</cfscript>","<cfquery name=\"qVesselExists\" datasource=\"#getDSN()#\">\n                SELECT vessel_code\n                  FROM master_vessel\n                      WHERE REGEXP_REPLACE(regexp_replace(vessel_long_name, '( *[[:punct:]])', ''), '\\s*', '') = <CFQUERYPARAM CFSQLType=\"CF_SQL_Varchar\" Value=\"#condensedVesselText#\">\n                AND operator_code = <CFQUERYPARAM CFSQLType=\"CF_SQL_Integer\" Value=\"#Arguments.OperatorCode#\" />\n            </cfquery>","<cfreturn/>","variables.instance.coderFactory.getCoder(\"dataset\",\"#arguments.datasetID#\")","<cfset/>","reportCount=reportCount + 1","<div>","<cfif reportCount NEQ ListLen(reportList)>class=\"paged\"</cfif>","</div>","<CFFUNCTION>","Name=\"FixDatasetForLine\"","output=\"false\"","<CFARGUMENT>","Name=\"Line_ID\"","Type=\"String\"","Required=\"True\"","<cfset/>","var","l=structNew()","<cfquery name=\"l.cinfo\" datasource=\"#getDSN()#\">\n            SELECT d.id as dataset_id, d.period, l.receiving_date FROM line_container l, dataset_container d\n            WHERE l.id = <cfqueryparam cfsqltype=\"cf_sql_integer\" value=\"#arguments.line_id#\" />\n            AND d.id = l.dataset_id\n        </cfquery>","<cfset/>","l.true_period=\"1/#Month(l.cinfo.receiving_date)#/#Year(l.cinfo.receiving_date)#\"","<cfreturn/>","l","</CFFUNCTION>","<cfquery name=\"q\" datasource=\"#getDSN()#\">\n    SELECT *\n\n    FROM    foobar_leasor c\n    WHERE   1=1\n    <cfif LEN(arguments.fromOrganizationCode)>\n        <cfif arguments.fromOrganizationType EQ \"R\">\n            AND op1.organization_code = <cfqueryparam cfsqltype=\"cf_sql_integer\" value=\"#arguments.FromOrganizationCode#\" />\n        <cfelse>\n            AND ts1.ts_oper = <cfqueryparam cfsqltype=\"cf_sql_integer\" value=\"#arguments.FromOrganizationCode#\" />\n        </cfif>\n    </cfif>\n</cfquery>","<cfcomponent>","extends=\"BaseComponent\"","<cffunction>","hint=\"returns the leasor_id for the newly created leasor foobar record\"","name=\"create\"","output=\"false\"","returntype=\"numeric\"","<cfargument>","name=\"foobarcode\"","required=\"true\"","type=\"numeric\"","<cfreturn/>","getImportLeasor().CodeAndErrorCheck(argumentCollection = {, foobarCode = arguments.foobarCode })","</cffunction>","</cfcomponent>","<cfquery name=\"c\" datasource=\"#getDSN()#\">\n        SELECT certification_id\n          FROM aemis.pd_certification\n         WHERE certification = <cfqueryparam cfsqltype=\"cf_sql_varchar\" value=\"#Trim(arguments.data.certification[arguments.data.currentRow])#\">\n        and open_py <= 2015 AND (close_py >= 2015 OR close_py IS NULL)\n</cfquery>","<cftransaction>","<cftry>","<cfloop>","query=\"arguments.data\"","<!--- do some stuff.. doesn't matter.. --->","</cfloop>","<!--- everything worked, commit the transaction! --->","<cftransaction>","action=\"commit\"","<cfcatch>","<!--- something went wrong; roll back the transaction! --->","<cftransaction>","action=\"rollback\"","</cfcatch>","</cftry>","</cftransaction>","<cfif>","local.col EQ arguments.ignoreRowIfMissingDataInColumn AND NOT LEN(Trim(local.cellValue))","<cfset/>","local.break=false","<!--- just get rid of this row since we think it is empty --->","<cfset/>","ArrayDeleteAt(local.ary,local.aryRowIndex)","<cfbreak>","</cfif>","<CFFUNCTION>","Name=\"GetByLineID\"","access=\"public\"","output=\"false\"","returntype=\"struct\"","<cfargument/>","name=\"ContainerLineID\"","type=\"numeric\"","required=\"true\"","<cfset/>","var","qD=\"\"","<cfquery name=\"qD\" datasource=\"#getDSN()#\">\n            SELECT  d.*\n           FROM     line_container  l,\n                    dataset_container d\n          WHERE l.dataset_container_id  = d.id\n            AND l.id                    = <CFQUERYPARAM CFSQLType=\"CF_SQL_Integer\" Value=\"#arguments.ContainerLineID#\">\n\n        </cfquery>","<cfset/>","qd=ConvertQueryToArray(qd)","<cfreturn/>","qd[1]","</CFFUNCTION>","<cfset/>","getContainerCoder().CheckLine(line_id)","<cfset/>","getContainerCoder().CrossCheckLine(line_id)","</CFMODULE>","</cfoutput>"],"types":["template","attribute","template","attribute","template","attribute","template","attribute","template","attribute","template_start","attribute","attribute","template","attribute","template_start","attribute","template","attribute","template_end","template","attribute","template_end","template_start","start","start","template_start","attribute","attribute","start","content","end","template_start","attribute","template","attribute","template_end","template","attribute","template_end","template_start","attribute","attribute","attribute","start","template_start","attribute","attribute","start","template_start","attribute","content","template_else","content","template_end","end","template_end","end","template_end","end","end","template_start","attribute","template","attribute","template_start","attribute","template_end","template_end","template_start","attribute","attribute","template_start","attribute","template","attribute","start","template_start","start","attribute","content","end","template_end","end","start","content","end","start","content","template","attribute","template_start","attribute","template_start","attribute","attribute","template","attribute","template_end","template_end","template_start","content","template_end","template_start","attribute","attribute","template_start","attribute","content","template_else","content","template_end","template_end","template","attribute","attribute","attribute","end","start","content","end","template_start","attribute","template_start","attribute","attribute","template","attribute","template_end","template_end","start","attribute","content","end","start","content","end","template_else","template","attribute","content","template_end","template","attribute","template","attribute","template_start","attribute","template_start","attribute","attribute","template","attribute","template_end","template_end","template_start","attribute","template_start","attribute","attribute","template","attribute","template_end","template_end","template_start","attribute","template_end","template_start","word","reference","start","reference","end","start","word","reference","operator","word","start","string","end","separator","word","reference","operator","number","separator","word","reference","operator","word","start","reference","end","separator","word","reference","operator","number","separator","word","reference","operator","string","separator","word","start","word","word","start","word","separator","string","end","end","start","word","separator","word","operator","word","start","end","separator","end","word","start","word","word","start","word","separator","word","separator","string","end","end","start","word","separator","word","separator","word","operator","word","start","end","separator","end","word","separator","word","separator","word","separator","word","operator","number","separator","word","start","separator","reference","word","reference","separator","reference","operator","reference","operator","number","end","start","reference","operator","word","start","reference","separator","word","separator","number","end","separator","reference","operator","word","start","word","start","word","start","reference","separator","number","end","separator","word","start","number","operator","word","start","word","start","word","start","reference","separator","number","end","separator","word","start","reference","end","end","separator","number","end","end","end","separator","number","end","separator","end","word","word","start","reference","separator","number","end","separator","end","template_end","content_preserve","template","attribute","template","attribute","start","attribute","end","template_start","attribute","attribute","template","attribute","attribute","attribute","template","attribute","attribute","content_preserve","template","attribute","template","attribute","template_end","content_preserve","template_start","attribute","template_start","attribute","attribute","attribute","attribute","template","attribute","attribute","attribute","template","attribute","template_end","template_end","content_preserve","template_start","template_start","template_start","attribute","comment","template_end","comment","template","attribute","template_start","comment","template","attribute","template_end","template_end","template_end","template_start","attribute","template","attribute","comment","template","attribute","template","template_end","template_start","attribute","attribute","attribute","attribute","template","attribute","attribute","attribute","template","attribute","attribute","content_preserve","template","attribute","template","attribute","template_end","template","attribute","template","attribute","template_end","template_end"]}